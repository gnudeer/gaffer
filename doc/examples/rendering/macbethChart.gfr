import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath
import os

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 54, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort" ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName" ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory" ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedOptions"] = GafferAppleseed.AppleseedOptions( "AppleseedOptions" )
parent.addChild( __children["AppleseedOptions"] )
__children["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize" ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType" ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort" ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType" ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost" ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize" ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveAppleseedRender"] = GafferAppleseed.InteractiveAppleseedRender( "InteractiveAppleseedRender" )
parent.addChild( __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["latlong_map_environment_edf"] = GafferAppleseed.AppleseedLight( "latlong_map_environment_edf" )
parent.addChild( __children["latlong_map_environment_edf"] )
__children["latlong_map_environment_edf"].loadShader( "latlong_map_environment_edf" )
__children["latlong_map_environment_edf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MacbethTexture"] = Gaffer.Reference( "MacbethTexture" )
parent.addChild( __children["MacbethTexture"] )
__children["MacbethTexture"].load( os.path.expandvars("${GAFFER_ROOT}/resources/examples/references/macbethTexture.grf") )
__children["MacbethTexture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["as_disney_material"] = GafferOSL.OSLShader( "as_disney_material" )
parent.addChild( __children["as_disney_material"] )
__children["as_disney_material"].loadShader( "as_disney_material" )
__children["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_closure2surface"] = GafferOSL.OSLShader( "as_closure2surface" )
parent.addChild( __children["as_closure2surface"] )
__children["as_closure2surface"].loadShader( "as_closure2surface" )
__children["as_closure2surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 37647 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Plane"]["dimensions"].setValue( imath.V2f( 2.5, 1.5 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -37.7817268, 30.7300987 ) )
__children["ShaderAssignment"]["in"].setInput( __children["Plane"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["as_closure2surface"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -37.7829475, 22.5660172 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -23.5107441, 28.6480675 ) )
__children["StandardOptions"]["in"].setInput( __children["Group"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -11.2808237, 8.73789215 ) )
__children["AppleseedOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["AppleseedOptions"]["options"]["environmentEDF"]["value"].setValue( '/group/light' )
__children["AppleseedOptions"]["options"]["environmentEDF"]["enabled"].setValue( True )
__children["AppleseedOptions"]["options"]["environmentEDFBackground"]["value"].setValue( True )
__children["AppleseedOptions"]["options"]["environmentEDFBackground"]["enabled"].setValue( True )
__children["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( -11.2808237, 3.07382965 ) )
__children["Outputs"]["in"].setInput( __children["AppleseedOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["outputs"]["output2"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output2"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/macbethChart/beauty/beauty.####.exr' )
__children["Outputs"]["outputs"]["output2"]["type"].setValue( 'exr' )
__children["Outputs"]["outputs"]["output2"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( -11.2808237, -2.5902319 ) )
__children["InteractiveAppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["InteractiveAppleseedRender"]["__uiPosition"].setValue( imath.V2f( -11.2808237, -10.7542944 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/examples/macbethChart' )
__children["Catalogue"]["__mapping"].setValue( IECore.CompoundData({'Image':IECore.IntData( 0 )}) )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 5.52473783, -10.8261728 ) )
__children["latlong_map_environment_edf"]["parameters"]["radiance_map"].setValue( '${GAFFER_ROOT}/resources/hdri/studio.exr' )
__children["latlong_map_environment_edf"]["__uiPosition"].setValue( imath.V2f( 4.09312582, 22.5660172 ) )
__children["Group"]["in"]["in0"].setInput( __children["ShaderAssignment"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Camera"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["latlong_map_environment_edf"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -11.2808237, 14.4019547 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 0, 5 ) )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -12.7808228, 22.5660172 ) )
Gaffer.Metadata.registerValue( __children["MacbethTexture"], 'icon', os.path.expandvars('${GAFFER_ROOT}/resources/examples/references/macbethTexture.png') )
Gaffer.Metadata.registerValue( __children["MacbethTexture"], 'nodeGadget:color', imath.Color3f( 0.5, 0.25, 0.25 ) )
__children["MacbethTexture"]["color"].setInput( __children["MacbethTexture"]["BoxOut"]["__out"] )
__children["MacbethTexture"]["color"]["r"].setInput( __children["MacbethTexture"]["BoxOut"]["__out"]["r"] )
__children["MacbethTexture"]["color"]["g"].setInput( __children["MacbethTexture"]["BoxOut"]["__out"]["g"] )
__children["MacbethTexture"]["color"]["b"].setInput( __children["MacbethTexture"]["BoxOut"]["__out"]["b"] )
__children["MacbethTexture"]["__uiPosition"].setValue( imath.V2f( -83.747551, 29.766016 ) )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/examples/macbethChart/macbethChart.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( -29.6462021, -10.7542944 ) )
__children["Backdrop"]["title"].setValue( '' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -65.547821, -25.8601665 ), imath.V2f( 49.8511086, 31.8601665 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -32.6860962, 9.95196342 ) )
__children["Backdrop1"]["title"].setValue( 'Example: Macbeth Chart' )
__children["Backdrop1"]["description"].setValue( 'In this graph, we show a procedurally-generated Macbeth chart. We load a "MacbethTexture" reference script to generate a texture in OSL, pass the texture to a standard Appleseed shader, and then assign it to a 5:3 ratio plane.\n\nTo preview the scene in an IPR:\n\n1. Select the InteractiveAppleseedRender node.\n2. Click play.\n3. Select the Catalogue node.\n4. The IPR will display in the Viewer. To frame the image, hover the mouse cursor over the Viewer, then hit F.' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -16.8507195, 23.1901512 ), imath.V2f( 26.4611454, 80.910141 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -121.740974, -39.1081314 ) )
__children["as_disney_material"]["parameters"]["in_color"].setInput( __children["MacbethTexture"]["color"] )
__children["as_disney_material"]["parameters"]["in_color"]["r"].setInput( __children["MacbethTexture"]["color"]["r"] )
__children["as_disney_material"]["parameters"]["in_color"]["g"].setInput( __children["MacbethTexture"]["color"]["g"] )
__children["as_disney_material"]["parameters"]["in_color"]["b"].setInput( __children["MacbethTexture"]["color"]["b"] )
__children["as_disney_material"]["parameters"]["in_specular_amount"].setValue( 0.10000000149011612 )
__children["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -67.9946213, 21.3660164 ) )
__children["as_closure2surface"]["parameters"]["in_input"].setInput( __children["as_disney_material"]["out"]["out_outColor"] )
__children["as_closure2surface"]["__uiPosition"].setValue( imath.V2f( -52.8835335, 22.5660172 ) )


del __children

